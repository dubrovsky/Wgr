package com.bivc.cimsmgs.db.ky;

// Generated 01.11.2011 8:57:21 by Hibernate Tools 3.4.0.CR1

import com.bivc.cimsmgs.db.CimSmgsFileInf;
import com.fasterxml.jackson.annotation.JsonIgnore;

import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Blob;
import java.sql.SQLException;
import java.util.Date;
import java.util.Objects;

/**
 * CimSmgsFile generated by hbm2java
 */
public class AvtoFiles implements Serializable, Comparable<AvtoFiles> {

	private Long hid;
	private Long npp;
	private Avto avto;
	private AvtoZayav avtoZayav;
	@JsonIgnore
	private Blob files;
	private String fileName;
	private String contentType;
	private String docType;
	private String num;
	private BigDecimal length;
	private Date uploaded;


	public String getNum() {
		return num;
	}

	public void setNum(String num) {
		this.num = num;
	}

	public AvtoFiles() {
    	this.uploaded = new Date();
	}

	public AvtoZayav getAvtoZayav() {
		return avtoZayav;
	}

	public void setAvtoZayav(AvtoZayav avtoZayav) {
		this.avtoZayav = avtoZayav;
	}

	public Long getNpp() {
		return npp;
	}

	public void setNpp(Long npp) {
		this.npp = npp;
	}

	public String getDocType() {
		return docType;
	}

	public void setDocType(String docType) {
		this.docType = docType;
	}


	public Date getUploaded() {
		return uploaded;
	}

	public void setUploaded(Date uploaded) {
		this.uploaded = uploaded;
	}

	public Long getHid() {
		return this.hid;
	}

	public void setHid(Long hid) {
		this.hid = hid;
	}

	public Avto getAvto() {
		return avto;
	}

	public void setAvto(Avto avto) {
		this.avto = avto;
	}

	public Blob getFiles() {
		return this.files;
	}

	public void setFiles(Blob files) {
		this.files = files;
	}

	public String getFileName() {
		return this.fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	public String getContentType() {
		return this.contentType;
	}

	public void setContentType(String contentType) {
		this.contentType = contentType;
	}

    public BigDecimal getLength_() {
        BigDecimal result = getLength();
        if(getLength() == null || getLength().intValue() == 0 || getLength().intValue() == 1){
            try {
                result = BigDecimal.valueOf(getFiles().length());
            } catch (SQLException e) {
                e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
            }
        }
        return result;
    }

	public BigDecimal getLength() {
		return this.length;
	}

	public void setLength(BigDecimal length_) {
        length = length_;
        /*if(length == null || length.intValue() == 0 || getLength().intValue() == 1){
            length = getLength_();
        }*/

	}

	
	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;
		AvtoFiles avtoFiles = (AvtoFiles) o;
		return hid.equals(avtoFiles.hid) &&
				Objects.equals(npp, avtoFiles.npp) &&
				avto.equals(avtoFiles.avto) &&
				Objects.equals(files, avtoFiles.files) &&
				Objects.equals(fileName, avtoFiles.fileName) &&
				Objects.equals(contentType, avtoFiles.contentType) &&
				Objects.equals(docType, avtoFiles.docType) &&
				Objects.equals(length, avtoFiles.length) &&
				Objects.equals(uploaded, avtoFiles.uploaded) &&
				Objects.equals(num, avtoFiles.num);
	}

	@Override
	public int hashCode() {
		return Objects.hash(hid, npp, avto, files, fileName, contentType, docType, length, uploaded, num);
	}

	@Override
	public int compareTo(AvtoFiles that) {
		final int BEFORE = -1;
		final int AFTER = 1;

		if (that == null) {
			return BEFORE;
		}

		Long thisHid = this.getHid();
		Long thatHid = that.getHid();

		if (thisHid == null) {
			return AFTER;
		} else if (thatHid == null) {
			return BEFORE;
		} else {
			return thisHid.compareTo(thatHid);
		}
	}
}

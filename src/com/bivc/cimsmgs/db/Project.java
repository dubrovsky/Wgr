package com.bivc.cimsmgs.db;

// Generated 13.05.2011 15:11:19 by Hibernate Tools 3.4.0.CR1

import com.bivc.cimsmgs.commons.myUser;
import com.fasterxml.jackson.annotation.*;

import java.io.Serializable;
import java.util.*;

/**
 * Project generated by hbm2java
 */
@JsonIgnoreProperties({"projectGroupses","routes","dattr","grps"})
public class Project implements Serializable {

	private Long hid;
	private String name;
	private Date dattr;
	private String un;
	private Date locked;
	private String unLock;
	private Date altered;
	private Set<ProjectGroups> projectGroupses = new HashSet<ProjectGroups>(0);
    //	private Set<Route> routes = new HashSet<Route>(0);
    private SortedSet<Route> routes = new TreeSet<Route>();
    private List<UsrGroupsDir> grps = new ArrayList<UsrGroupsDir>();
    private List<Route> rts = new ArrayList<Route>();

    public SortedSet<Route> getRoutes() {
        return routes;
    }

    public void setRoutes(SortedSet<Route> routes) {
        this.routes = routes;
    }
//    public Set<Route> getRoutes() {
//        return routes;
//    }
//
//    public void setRoutes(Set<Route> routes) {
//        this.routes = routes;
//    }

    //    private Map<Long, Route> routes = new TreeMap<Long, Route>();


    public List<UsrGroupsDir> getGrps() {
        return grps;
    }

    public void setGrps(List<UsrGroupsDir> grps) {
        this.grps = grps;
    }

	public Project() {
	}

	public Project(Long hid) {
		this.hid = hid;
	}

	public Project(Long hid, String name, Date dattr, String un, Date locked, String unLock, Date altered, Set projectGroupses, SortedSet routes) {
		this.hid = hid;
		this.name = name;
		this.dattr = dattr;
		this.un = un;
		this.locked = locked;
		this.unLock = unLock;
		this.altered = altered;
		this.projectGroupses = projectGroupses;
		this.routes = routes;
	}

	public Long getHid() {
		return this.hid;
	}

	public void setHid(Long hid) {
		this.hid = hid;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public Date getDattr() {
		return this.dattr;
	}

	public void setDattr(Date dattr) {
		this.dattr = dattr;
	}

	public String getUn() {
		return this.un;
	}

	public void setUn(String un) {
		this.un = un;
	}

	public Date getLocked() {
		return this.locked;
	}

	public void setLocked(Date locked) {
		this.locked = locked;
	}

	public String getUnLock() {
		return this.unLock;
	}

	public void setUnLock(String unLock) {
		this.unLock = unLock;
	}

	public Date getAltered() {
		return this.altered;
	}

	public void setAltered(Date altered) {
		this.altered = altered;
	}

    public List<UsrGroupsDir> getGroups() {
        ArrayList<UsrGroupsDir> groups = new ArrayList<UsrGroupsDir>();
        for (ProjectGroups projectGroup : projectGroupses) {
            projectGroup.getUsrGroupsDir().setProject_hid(this.getHid());
            groups.add(projectGroup.getUsrGroupsDir());
        }
        return groups;
    }

    public void prepareGroups4Save() {
        for(UsrGroupsDir group: grps){
            projectGroupses.add(new ProjectGroups(this, group));
        }
    }

    public void prepareRouteGroups4Save() {
        for(Route route: routes){
            route.prepareGroups4Save();
        }
    }

    public void prepareRoutes4Save() {
        for(Route route: rts){
            route.setProject(this);
            routes.add(route);
        }
    }
    @JsonManagedReference
	public Set<ProjectGroups> getProjectGroupses() {
		return this.projectGroupses;
	}
    @JsonManagedReference
	public void setProjectGroupses(Set<ProjectGroups> projectGroupses) {
		this.projectGroupses = projectGroupses;
	}

//	public Set<Route> getRoutes() {
//		return this.routes;
//	}
//
//	public void setRoutes(Set<Route> routes) {
//		this.routes = routes;
//	}
    public List<Route> getRouts() {
        ArrayList<Route> result = new ArrayList<Route>();
        for (Route route : routes) {
            result.add(route);
        }
        return result;
    }
//    @JsonManagedReference
//    public Map<Long, Route> getRoutes() {
//        return routes;
//    }
//    @JsonManagedReference
//    public void setRoutes(Map<Long, Route> routes) {
//        this.routes = routes;
//    }

    public String buildGroups() {
        StringBuffer sb = new StringBuffer();
        String prefix = "";
        for (ProjectGroups group : getProjectGroupses()) {
            sb.append(prefix);
            prefix = ",";
            sb.append(group.getUsrGroupsDir().getName());
        }
        return sb.toString();
    }

    public String buildRoutes() {
        StringBuffer sb = new StringBuffer();
        String prefix = "";
        for (Route router : routes) {
            sb.append(prefix);
            prefix = ",";
            sb.append(router.getName());
        }
        return sb.toString();
    }

    public void prepare4save(myUser user) {
//        setGroups();
//        prepareRoutes4Save();
        setUn(user.getUsername());
        setDattr(new Date());
    }

    public List<Route> getRts() {
        return rts;
    }

    public void setRts(List<Route> rts) {
        this.rts = rts;
    }

    public void prepareRouteDocs4Save() {
        for(Route route: routes){
            route.prepareDocs4Save();
        }
    }
}
